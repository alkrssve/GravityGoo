[gd_scene load_steps=8 format=2]

[ext_resource path="res://Sprites/Enemies/FlyingEnemy_One.png" type="Texture" id=1]

[sub_resource type="GDScript" id=3]
script/source = "extends KinematicBody2D

var direction = Vector2(0,0)
var speed = 50
var GRAVITY = 1
var BULLET_SPEED = 75
var FIRE_RATE = 1
var velocity = Vector2(0,0)
var up_direction = Vector2.UP

var player_range = false

var facing_right = true

var dead = false

var bullet = preload(\"res://EnemyBullet.tscn\")
var can_fire = true

onready var anim_player = $AnimationPlayer
onready var particle = $Particles2D

func _physics_process(delta):
	if player_range and can_fire:
		play_anim(\"shoot\")
		fire()
		can_fire = false
		yield(get_tree().create_timer(FIRE_RATE), \"timeout\")
		can_fire = true
	
	get_direction()
	if Global.player.get_node(\"CollisionShape2D\").global_position.x > $CollisionShape2D.global_position.x - 16 and Global.player.get_node(\"CollisionShape2D\").global_position.x < $CollisionShape2D.global_position.x + 16:
		player_range = true
	if $WallCheck.is_colliding():
		direction.y = -1
	velocity = calculate_velocity(direction,velocity,delta)
	move_and_slide(velocity)
	
	if facing_right and direction.x > 0:
		flip_h()
		$WallCheck.rotation = 180
	if !facing_right and direction.x < 0:
		flip_h()
		$WallCheck.rotation = 0

func fire():
	var bullet_instance = bullet.instance()
	bullet_instance.position.x = position.x + (get_viewport().get_mouse_position().x/60)
	bullet_instance.position.y = position.y + (get_viewport().get_mouse_position().y/60)
	get_parent().add_child(bullet_instance)

func play_anim(anim_name):
	if anim_player.is_playing() and anim_player.current_animation == anim_name:
		return
	anim_player.play(anim_name)
	
func flip_h():
	facing_right = !facing_right
	$Sprite.flip_h = !$Sprite.flip_h
	if facing_right:
		particle.process_material.direction.x = 1 
		particle.position.x += 10
	else:
		particle.process_material.direction.x = -1
		particle.position.x += -10

func get_direction():
	#left
	if Global.player.get_node(\"CollisionShape2D\").global_position.x < $CollisionShape2D.global_position.x - 16 and Global.player.get_node(\"CollisionShape2D\").global_position.x > $CollisionShape2D.global_position.x - 200:
		direction.x = -1
	#right
	elif Global.player.get_node(\"CollisionShape2D\").global_position.x > $CollisionShape2D.global_position.x + 16 and Global.player.get_node(\"CollisionShape2D\").global_position.x < $CollisionShape2D.global_position.x + 200:
		direction.x = 1
	else:
		direction.x = 0
	#up
	if Global.player.get_node(\"CollisionShape2D\").global_position.y < $CollisionShape2D.global_position.y - 16 and Global.player.get_node(\"CollisionShape2D\").global_position.y > $CollisionShape2D.global_position.y - 200 and Global.player.get_node(\"CollisionShape2D\").global_position.x > $CollisionShape2D.global_position.x - 200:
		direction.y = -1
	#down
	elif Global.player.get_node(\"CollisionShape2D\").global_position.y > $CollisionShape2D.global_position.y + 16 and Global.player.get_node(\"CollisionShape2D\").global_position.y < $CollisionShape2D.global_position.y + 200 and Global.player.get_node(\"CollisionShape2D\").global_position.x < $CollisionShape2D.global_position.x + 200:
		direction.y = 1
	else:
		direction.y = 0

func calculate_velocity(dir, vel, delta):
	var new_vel = vel
	
	new_vel.y = dir.y * speed	
	new_vel.x = dir.x * speed
	
	if dead:
		new_vel = Vector2.ZERO
		
	return new_vel
		


func _on_PlayerDetection_body_entered(body):
	if body.is_in_group(\"Player\"):
		player_range = true


func _on_HitDetection_body_entered(body):
	if body.is_in_group(\"PlayerBullet\"):
		queue_free()
		body.queue_free()
"

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 3.5, 6.5 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 8, 2 )

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:region_rect")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Rect2( 0, 0, 16, 18 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "shoot"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:region_rect")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 16, 18 ), Rect2( 16, 0, 16, 18 ), Rect2( 32, 0, 16, 18 ), Rect2( 16, 0, 16, 18 ), Rect2( 0, 0, 16, 18 ) ]
}

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 201.5, 118.5 )

[node name="FlyingEnemy" type="KinematicBody2D"]
z_index = 1
collision_layer = 2
collision_mask = 6
script = SubResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 4.5, 2.5 )
shape = SubResource( 1 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="."]
position = Vector2( 0, -1 )
shape = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )
region_enabled = true
region_rect = Rect2( 0, 0, 16, 18 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 5 )
anims/shoot = SubResource( 6 )

[node name="PlayerDetection" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="PlayerDetection"]
position = Vector2( 1.5, 2.5 )
shape = SubResource( 4 )

[node name="FloorCheck" type="RayCast2D" parent="."]
position = Vector2( 4, 6 )
enabled = true
cast_to = Vector2( 0, 12 )
collision_mask = 4

[node name="WallCheck" type="RayCast2D" parent="."]
position = Vector2( 1, 9 )
enabled = true
cast_to = Vector2( -15, 0 )
collision_mask = 4

[node name="HitDetection" type="Area2D" parent="."]
collision_mask = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="HitDetection"]
position = Vector2( 4.5, 2.5 )
shape = SubResource( 1 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="HitDetection"]
position = Vector2( 0, -1 )
shape = SubResource( 2 )

[connection signal="body_entered" from="PlayerDetection" to="." method="_on_PlayerDetection_body_entered"]
[connection signal="body_entered" from="HitDetection" to="." method="_on_HitDetection_body_entered"]
